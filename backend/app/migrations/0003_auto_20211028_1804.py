# Generated by Django 3.1.5 on 2021-10-28 18:04

from django.db import migrations, transaction, models
import django.db.models.deletion

from django.template.defaultfilters import slugify


# Create cities
def populate_cities(apps, schema_editor):
    # This is to standardize cities. We collect them all, lower case them, slugify them,
    # and add them as unique rows to the City table.
    # Next step is to change eviction cities to be foreignkeys of City
    City = apps.get_model('app', 'City')
    Evictions = apps.get_model('app', 'Evictions')
    for eviction in Evictions.objects.all():
        try:
            city, created = City.objects.get_or_create(id=slugify(eviction.city))
            city.name = eviction.city.lower()
            city.save()
        except:
            pass


# For backward migration of: create cities
def depopulate_cities(apps, schema_editor):
    # backward migration, in case you need to step back
    City = apps.get_model('app', 'City')
    City.objects.all().delete()


# Add city fk to evictions
def change_eviction_cities(apps, schema_editor):
    # Changing eviction cities to be foreignkeys of City
    City = apps.get_model('app', 'City')
    Evictions = apps.get_model('app', 'Evictions')
    for eviction in Evictions.objects.all():
        try:
            with transaction.atomic():
                city = City.objects.get(id=slugify(eviction.city))
                eviction.city_link = city
                eviction.save()
        except Exception as err:
            print("what did we except on?", err)
            pass


def change_eviction_cities_back(apps, schema_editor):
    # backward migration, in case you need to step back
    Evictions = apps.get_model('app', 'Evictions')
    for eviction in Evictions.objects.all():
        eviction.city_link = None
        eviction.save()


class Migration(migrations.Migration):
    dependencies = [
        ('app', '0002_auto_20211028_1803'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.SlugField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='evictions',
            name='city_link',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='app.city'),
        ),
        migrations.RunPython(populate_cities, depopulate_cities),
        migrations.RunPython(change_eviction_cities, change_eviction_cities_back)
    ]
