# Generated by Django 3.1.5 on 2021-10-28 18:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CensusBgs',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('white_pop', models.FloatField(blank=True, null=True)),
                ('black_pop', models.FloatField(blank=True, null=True)),
                ('asian_pop', models.FloatField(blank=True, null=True)),
                ('latinx_pop', models.FloatField(blank=True, null=True)),
                ('foreign_born', models.FloatField(blank=True, null=True)),
                ('under18_pop', models.FloatField(blank=True, null=True)),
                ('sgl_carer', models.FloatField(blank=True, null=True)),
                ('married_hh', models.FloatField(blank=True, null=True)),
                ('tot_pop', models.FloatField(blank=True, null=True)),
                ('hs', models.FloatField(blank=True, null=True)),
                ('ged', models.FloatField(blank=True, null=True)),
                ('assc', models.FloatField(blank=True, null=True)),
                ('bach', models.FloatField(blank=True, null=True)),
                ('mast', models.FloatField(blank=True, null=True)),
                ('prof', models.FloatField(blank=True, null=True)),
                ('phd', models.FloatField(blank=True, null=True)),
                ('mhi', models.FloatField(blank=True, null=True)),
                ('tot_houses', models.FloatField(blank=True, null=True)),
                ('vacant', models.FloatField(blank=True, null=True)),
                ('tot_hh', models.FloatField(blank=True, null=True)),
                ('tot_renters', models.FloatField(blank=True, null=True)),
                ('black_renters', models.FloatField(blank=True, null=True)),
                ('asian_renters', models.FloatField(blank=True, null=True)),
                ('white_renters', models.FloatField(blank=True, null=True)),
                ('latinx_renters', models.FloatField(blank=True, null=True)),
                ('mgr_all', models.FloatField(blank=True, null=True)),
                ('mgr_1br', models.FloatField(blank=True, null=True)),
                ('median_burd', models.FloatField(blank=True, null=True)),
                ('pop_pct_white', models.FloatField(blank=True, null=True)),
                ('pop_pct_black', models.FloatField(blank=True, null=True)),
                ('pop_pct_asian', models.FloatField(blank=True, null=True)),
                ('pop_pct_latinx', models.FloatField(blank=True, null=True)),
                ('pop_pct_under18', models.FloatField(blank=True, null=True)),
                ('vacant_pct', models.FloatField(blank=True, null=True)),
                ('rent_pct', models.FloatField(blank=True, null=True)),
                ('rent_pct_white', models.FloatField(blank=True, null=True)),
                ('rent_pct_black', models.FloatField(blank=True, null=True)),
                ('rent_pct_asian', models.FloatField(blank=True, null=True)),
                ('rent_pct_latinx', models.FloatField(blank=True, null=True)),
                ('foreign_pct', models.FloatField(blank=True, null=True)),
                ('sgl_carer_pct', models.FloatField(blank=True, null=True)),
                ('sev_rent_burd_pct', models.FloatField(blank=True, null=True)),
                ('rent_burd_pct', models.FloatField(blank=True, null=True)),
                ('married_hh_pct', models.FloatField(blank=True, null=True)),
                ('bach_pct', models.FloatField(blank=True, null=True)),
                ('hs_ged_pct', models.FloatField(blank=True, null=True)),
                ('postbacc_pct', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('ma_towns', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'census_bgs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CensusTracts',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('white_pop', models.FloatField(blank=True, null=True)),
                ('black_pop', models.FloatField(blank=True, null=True)),
                ('asian_pop', models.FloatField(blank=True, null=True)),
                ('latinx_pop', models.FloatField(blank=True, null=True)),
                ('foreign_born', models.FloatField(blank=True, null=True)),
                ('under18_pop', models.FloatField(blank=True, null=True)),
                ('sgl_carer', models.FloatField(blank=True, null=True)),
                ('married_hh', models.FloatField(blank=True, null=True)),
                ('tot_pop', models.FloatField(blank=True, null=True)),
                ('hs', models.FloatField(blank=True, null=True)),
                ('ged', models.FloatField(blank=True, null=True)),
                ('assc', models.FloatField(blank=True, null=True)),
                ('bach', models.FloatField(blank=True, null=True)),
                ('mast', models.FloatField(blank=True, null=True)),
                ('prof', models.FloatField(blank=True, null=True)),
                ('phd', models.FloatField(blank=True, null=True)),
                ('mhi', models.FloatField(blank=True, null=True)),
                ('tot_houses', models.FloatField(blank=True, null=True)),
                ('vacant', models.FloatField(blank=True, null=True)),
                ('tot_hh', models.FloatField(blank=True, null=True)),
                ('tot_renters', models.FloatField(blank=True, null=True)),
                ('black_renters', models.FloatField(blank=True, null=True)),
                ('asian_renters', models.FloatField(blank=True, null=True)),
                ('white_renters', models.FloatField(blank=True, null=True)),
                ('latinx_renters', models.FloatField(blank=True, null=True)),
                ('mgr_all', models.FloatField(blank=True, null=True)),
                ('mgr_1br', models.FloatField(blank=True, null=True)),
                ('median_burd', models.FloatField(blank=True, null=True)),
                ('pop_pct_white', models.FloatField(blank=True, null=True)),
                ('pop_pct_black', models.FloatField(blank=True, null=True)),
                ('pop_pct_asian', models.FloatField(blank=True, null=True)),
                ('pop_pct_latinx', models.FloatField(blank=True, null=True)),
                ('pop_pct_under18', models.FloatField(blank=True, null=True)),
                ('vacant_pct', models.FloatField(blank=True, null=True)),
                ('rent_pct', models.FloatField(blank=True, null=True)),
                ('rent_pct_white', models.FloatField(blank=True, null=True)),
                ('rent_pct_black', models.FloatField(blank=True, null=True)),
                ('rent_pct_asian', models.FloatField(blank=True, null=True)),
                ('rent_pct_latinx', models.FloatField(blank=True, null=True)),
                ('foreign_pct', models.FloatField(blank=True, null=True)),
                ('sgl_carer_pct', models.FloatField(blank=True, null=True)),
                ('sev_rent_burd_pct', models.FloatField(blank=True, null=True)),
                ('rent_burd_pct', models.FloatField(blank=True, null=True)),
                ('married_hh_pct', models.FloatField(blank=True, null=True)),
                ('bach_pct', models.FloatField(blank=True, null=True)),
                ('hs_ged_pct', models.FloatField(blank=True, null=True)),
                ('postbacc_pct', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('ma_towns', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'census_tracts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Docket',
            fields=[
                ('id', models.TextField(blank=True, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('docket', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('meta_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evictions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('case_status', models.TextField(blank=True, null=True)),
                ('case_type', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('def_field', models.TextField(blank=True, db_column='def', null=True)),
                ('def_addl', models.TextField(blank=True, null=True)),
                ('def_atty', models.TextField(blank=True, null=True)),
                ('def_atty_add', models.TextField(blank=True, null=True)),
                ('def_atty_bar', models.TextField(blank=True, null=True)),
                ('def_atty_ph', models.TextField(blank=True, null=True)),
                ('dispo', models.TextField(blank=True, null=True)),
                ('dispo_date', models.DateField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('docket', models.TextField(blank=True, null=True)),
                ('file_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateField(blank=True, null=True)),
                ('ptf', models.TextField(blank=True, null=True)),
                ('ptf_atty', models.TextField(blank=True, null=True)),
                ('ptf_atty_add', models.TextField(blank=True, null=True)),
                ('ptf_atty_bar', models.TextField(blank=True, null=True)),
                ('ptf_atty_ph', models.TextField(blank=True, null=True)),
                ('st', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('street_cleaned', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('match_type', models.TextField(blank=True, null=True)),
                ('geocoder', models.TextField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('meta_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evictions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Judgments',
            fields=[
                ('id', models.TextField(blank=True, primary_key=True, serialize=False)),
                ('index', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('against', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('docket', models.TextField(blank=True, null=True)),
                ('for_field', models.TextField(blank=True, db_column='for', null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('meta_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'judgments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3Lut',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('field_nm', models.CharField(max_length=10)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('code_desc', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'l3_lut',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3MiscPoly',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('misc_type', models.CharField(blank=True, max_length=15, null=True)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l3_misc_poly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3OthlegPoly',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('map_par_id', models.CharField(blank=True, max_length=26, null=True)),
                ('legal_type', models.CharField(blank=True, max_length=15, null=True)),
                ('ls_book', models.CharField(blank=True, max_length=16, null=True)),
                ('ls_page', models.CharField(blank=True, max_length=14, null=True)),
                ('reg_id', models.CharField(blank=True, max_length=15, null=True)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('taxpar_id', models.CharField(blank=True, max_length=18, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l3_othleg_poly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3ParcelFtpLinks',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('town', models.CharField(blank=True, max_length=21, null=True)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('shape_link', models.CharField(blank=True, max_length=100, null=True)),
                ('fgdb_link', models.CharField(blank=True, max_length=80, null=True)),
                ('fy', models.SmallIntegerField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=800, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l3_parcel_ftp_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3TaxparPoly',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('map_par_id', models.CharField(blank=True, max_length=26, null=True)),
                ('loc_id', models.CharField(blank=True, max_length=18, null=True)),
                ('poly_type', models.CharField(blank=True, max_length=15, null=True)),
                ('map_no', models.CharField(blank=True, max_length=4, null=True)),
                ('source', models.CharField(max_length=15)),
                ('plan_id', models.CharField(blank=True, max_length=40, null=True)),
                ('last_edit', models.IntegerField(blank=True, null=True)),
                ('bnd_chk', models.CharField(blank=True, max_length=2, null=True)),
                ('no_match', models.CharField(max_length=1)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('site', models.CharField(blank=True, max_length=80, null=True)),
                ('esn', models.SmallIntegerField(blank=True, null=True)),
                ('lu_codes', models.CharField(blank=True, max_length=60, null=True)),
                ('dev', models.CharField(blank=True, max_length=1, null=True)),
                ('sym1', models.SmallIntegerField(blank=True, null=True)),
                ('sym2', models.SmallIntegerField(blank=True, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l3_taxpar_poly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3Townfy',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('fy', models.IntegerField()),
                ('town_id', models.IntegerField(blank=True, null=True)),
                ('town', models.CharField(blank=True, max_length=21, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l3_townfy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L3UcLut',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('town_id', models.SmallIntegerField(blank=True, null=True)),
                ('use_code', models.CharField(blank=True, max_length=4, null=True)),
                ('use_desc', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'l3_uc_lut',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaHouse',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('repdistnum', models.IntegerField(blank=True, null=True)),
                ('rep_dist', models.TextField(blank=True, null=True)),
                ('rep_first', models.TextField(blank=True, null=True)),
                ('rep_last', models.TextField(blank=True, null=True)),
                ('rep_party', models.TextField(blank=True, null=True)),
                ('rep', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape_len', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ma_house',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaSenate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sen_dist', models.TextField(blank=True, null=True)),
                ('sen_first', models.TextField(blank=True, null=True)),
                ('sen_last', models.TextField(blank=True, null=True)),
                ('sen_party', models.TextField(blank=True, null=True)),
                ('senator', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape_len', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ma_senate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaTowns',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('town_id', models.IntegerField(blank=True, null=True)),
                ('pop1980', models.FloatField(blank=True, null=True)),
                ('pop1990', models.FloatField(blank=True, null=True)),
                ('pop2000', models.FloatField(blank=True, null=True)),
                ('popch90_00', models.FloatField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('fourcolor', models.IntegerField(blank=True, null=True)),
                ('fips_stco', models.FloatField(blank=True, null=True)),
                ('sum_acres', models.FloatField(blank=True, null=True)),
                ('sum_square', models.FloatField(blank=True, null=True)),
                ('pop2010', models.FloatField(blank=True, null=True)),
                ('popch00_10', models.FloatField(blank=True, null=True)),
                ('popch80_90', models.FloatField(blank=True, null=True)),
                ('shape_leng', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ma_towns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MaWardsPrecincts',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('ward', models.TextField(blank=True, null=True)),
                ('precinct', models.TextField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('pop_2010', models.FloatField(blank=True, null=True)),
                ('town', models.TextField(blank=True, null=True)),
                ('town_id', models.IntegerField(blank=True, null=True)),
                ('area_sqmi', models.FloatField(blank=True, null=True)),
                ('area_acres', models.FloatField(blank=True, null=True)),
                ('year', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('shape_len', models.FloatField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ma_wards_precincts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpdateMeta',
            fields=[
                ('id', models.TextField(blank=True, primary_key=True, serialize=False)),
                ('ip', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('district', models.TextField(blank=True, null=True)),
                ('user', models.TextField(blank=True, null=True)),
                ('update_table', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'update_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsCongress',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('statefp', models.TextField(blank=True, null=True)),
                ('cd116fp', models.TextField(blank=True, null=True)),
                ('namelsad', models.TextField(blank=True, null=True)),
                ('lsad', models.TextField(blank=True, null=True)),
                ('cdsessn', models.TextField(blank=True, null=True)),
                ('mtfcc', models.TextField(blank=True, null=True)),
                ('funcstat', models.TextField(blank=True, null=True)),
                ('aland', models.FloatField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.TextField(blank=True, null=True)),
                ('intptlon', models.TextField(blank=True, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'us_congress',
                'managed': False,
            },
        ),
    ]
