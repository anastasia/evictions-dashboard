# Generated by Django 3.1.5 on 2021-11-17 21:45

from shapely import wkb
from geopandas import gpd
import pandas as pd

from django.db import migrations, models
import django.db.models.deletion


def transform_to_geo(geo):
    return wkb.loads(geo, hex=True)


def add_census_tract(apps, schema_editor):
    Evictions = apps.get_model('app', 'Evictions')
    CensusTracts = apps.get_model('app', 'CensusTracts')
    evictions = Evictions.objects.all().values()
    evictions_df = pd.DataFrame(evictions)
    evictions_gpd = gpd.GeoDataFrame(evictions_df)
    census = CensusTracts.objects.all().values()
    census_df = pd.DataFrame(census)
    census_gpd = gpd.GeoDataFrame(census_df)
    # transform geometry
    evictions_gpd['geometry'] = evictions_gpd['geometry'].transform(transform_to_geo)
    census_gpd['geometry'] = census_gpd['geometry'].transform(transform_to_geo)
    pointInPoly = gpd.sjoin(evictions_gpd, census_gpd, op='within')

    for index, row in pointInPoly.iterrows():
        try:
            eviction = Evictions.objects.get(id=row['id_left'])
            census = CensusTracts.objects.get(id=row['id_right'])
            eviction.census_tract = census
            eviction.save()
        except:
            pass


def remove_census_tract(apps, schema_editor):
    Evictions = apps.get_model('app', 'Evictions')
    for eviction in Evictions.objects.all():
        eviction.census_tract = None
        eviction.save()


class Migration(migrations.Migration):
    dependencies = [
        ('app', '0013_auto_20211115_1645'),
    ]

    operations = [
        migrations.AddField(
            model_name='evictions',
            name='census_tract',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.SET_NULL,
                                    to='app.censustracts'),
        ),
        migrations.RunPython(add_census_tract, remove_census_tract),
    ]
