# Generated by Django 3.1.5 on 2021-11-03 15:08

from django.db import migrations, transaction


def add_town_fk_to_census(apps, schema_editor):
    """ Add town fk to census tables"""
    MaTowns = apps.get_model('app', 'MaTowns')
    CensusBgs = apps.get_model('app', 'CensusBgs')
    CensusTracts = apps.get_model('app', 'CensusTracts')
    for census in CensusBgs.objects.all():
        try:
            with transaction.atomic():
                town = MaTowns.objects.get(id=census.ma_towns)
                census.ma_town = town
                census.save()
        except Exception as err:
            print("what did we except on?", err)
            pass
    #  do same with census tracts
    for census in CensusTracts.objects.all():
        try:
            with transaction.atomic():
                town = MaTowns.objects.get(id=census.ma_towns)
                census.ma_town = town
                census.save()
        except Exception as err:
            print("what did we except on?", err)
            pass


def change_towns_back(apps, schema_editor):
    """backward migration, in case you need to step back"""
    CensusBgs = apps.get_model('app', 'CensusBgs')
    CensusTracts = apps.get_model('app', 'CensusTracts')

    for census in CensusBgs.objects.all():
        census.ma_town = None
        census.save()

    for census in CensusTracts.objects.all():
        census.ma_town = None
        census.save()


class Migration(migrations.Migration):
    dependencies = [
        ('app', '0007_auto_20211103_1507'),
    ]

    operations = [
        migrations.RunPython(add_town_fk_to_census, change_towns_back),
    ]
